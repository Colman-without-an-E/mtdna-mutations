install.packages("GillespieSSA2")
library(GillespieSSA2)
library(pracma)
library(stats)


# Reactions
r1 <- reaction("mu*w1", c(w1=-1)) # w1 degrade
r2 <- reaction("mu+c*(Nss-w1-delta*m1)", c(w1=+1)) # w1 replicate
r3 <- reaction("gamma*w1", c(w1=-1,w2=+1)) # w1 diffuse right
r4 <- reaction("mu*m1", c(m1=-1)) # m1 degrade
r5 <- reaction("mu+c*(Nss-w1-delta*m1)", c(m1=+1)) # m1 replicate
r6 <- reaction("gamma*m1", c(m1=-1,m2=+1)) # m1 diffuse right
r7 <- reaction("mu*w2", c(w2=-1)) # w2 degrade
r8 <- reaction("mu+c*(Nss-w2-delta*m2)", c(w2=+1)) # w2 replicate
r9 <- reaction("gamma*w2", c(w1=+1,w2=-1)) # w2 diffuse right
r10 <- reaction("mu*m2", c(m2=-1)) # m2 degrade
r11 <- reaction("mu+c*(Nss-w2-delta*m2)", c(m2=+1)) # m2 replicate
r12 <- reaction("gamma*m2", c(m1=+1,m2=-1)) # m2 diffuse right
r <- list(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)


args <- commandArgs(trailingOnly=TRUE)
if (length(args)!=1) {
  stop("Usage : ssd_sim_no_sfs.R <seed>")
}
seed <- as.integer(args[1])
set.seed(seed)

# Set simulation parameters
gammas <- logspace(-4, 2, 2)
tf <- 50
dt <- 0.5
t_interp <- seq(0,tf,dt)

# Initial state
x0 <- c(w1=25, m1=25, w2=25, m2=25)

H <- c()
for (i in 1:N) {
  gamma <- 1e-4
  params <- c(mu=7e-2, c=2.5e-3, Nss=30, delta=0.2, gamma=gamma)
  
  out <- ssa(x0, r, tf, params, census_interval = dt/10)
  out$state <- cbind(out$state, h = (out$state[,"m1"] + out$state[,"m1"]) / rowSums(out$state))
  suppressWarnings(h <- approx(out$time, out$state[,"h"], xout = t_interp, method = "constant")$y)

  df <- data.frame(t = t_interp, h)
  write.csv(df, sprintf("ssd_h_%.2e_%d.csv", gamma, seed), row.names = FALSE)  
}